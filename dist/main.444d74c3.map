{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastli","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","render","remove","forEach","node","index","$li","simplifyUrl","insertBefore","on","window","open","e","console","log","stopPropagation","splice","b","replace","prompt","indexOf","push","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,IAAMA,YAAYC,EAAE,WAAF,CAAlB;AACA,IAAMC,UAAUF,UAAUG,IAAV,CAAe,SAAf,CAAhB;AACI;AACJ,IAAMC,IAAIC,aAAaC,OAAb,CAAqB,GAArB,CAAV;AACA,IAAMC,UAAUC,KAAKC,KAAL,CAAWL,CAAX,CAAhB,EAA8B;AAC9B,IAAMM,UAAUH,WAAW,CACvB,EAAEI,MAAM,GAAR,EAAaC,KAAK,0BAAlB,EADuB,EAEvB,EAAED,MAAM,GAAR,EAAaC,KAAK,0BAAlB,EAFuB,CAA3B;AAIA,IAAMC,SAAS,SAATA,MAAS,GAAM;AACjBb,cAAUG,IAAV,CAAe,eAAf,EAAgCW,MAAhC,GADiB,CACwB;AACzCJ,YAAQK,OAAR,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC7B,YAAMC,MAAMjB,6HAGUe,KAAKL,IAHf,oFAKwBQ,YAAYH,KAAKJ,GAAjB,CALxB,kTAYJQ,YAZI,CAYSlB,OAZT,CAAZ;AAaAgB,YAAIG,EAAJ,CAAO,OAAP,EAAgB,YAAM;AAClBC,mBAAOC,IAAP,CAAYP,KAAKJ,GAAjB;AACH,SAFD;AAGAM,YAAIG,EAAJ,CAAO,OAAP,EAAgB,QAAhB,EAA0B,UAACG,CAAD,EAAO;AAC7BC,oBAAQC,GAAR,CAAY,OAAZ;AACAF,cAAEG,eAAF;AACAjB,oBAAQkB,MAAR,CAAeX,KAAf,EAAsB,CAAtB,EAH6B,CAGJ;AACzBJ,qBAJ6B,CAIpB;AACZ,SALD;AAMH,KAvBD;AAwBH,CA1BD;;AA4BA,IAAMM,cAAc,SAAdA,WAAc,CAACP,GAAD,EAAS;AACzB,QAAIiB,IAAIjB,IAAIkB,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,EACHA,OADG,CACK,SADL,EACgB,EADhB,EAEHA,OAFG,CAEK,MAFL,EAEa,EAFb,EAGHA,OAHG,CAGK,MAHL,EAGa,EAHb,CAAR,CADyB,CAIA;AACzBL,YAAQC,GAAR,CAAYG,CAAZ;AACA,WAAOA,CAAP;AACH,CAPD;AAQAhB;AACAZ,EAAE,YAAF,EACKoB,EADL,CACQ,OADR,EACiB,YAAM;AACf;AACA;;;;;AAKA,QAAIT,MAAMU,OAAOS,MAAP,CAAc,eAAd,CAAV;;AAEA,QAAInB,IAAIoB,OAAJ,CAAY,MAAZ,CAAJ,EAAyB;AACrBpB,cAAM,aAAaA,GAAnB;AACH;AACDF,YAAQuB,IAAR,CAAa;AACTtB,cAAMQ,YAAYP,GAAZ,EAAiB,CAAjB,CADG;AAETA,aAAKA;AAFI,KAAb;AAIAC;AACH,CAlBL;;AAoBAS,OAAOY,cAAP,GAAwB,YAAM;AAC1B,QAAMC,SAAS3B,KAAK4B,SAAL,CAAe1B,OAAf,CAAf,CAD0B,CACa;AACvCL,iBAAagC,OAAb,CAAqB,GAArB,EAA0BF,MAA1B,EAF0B,CAEQ;AACrC,CAHD;;AAKAlC,EAAEqC,QAAF,EAAYjB,EAAZ,CAAgB,UAAhB,EAA6B,UAACG,CAAD,EAAO;AAAA,QACxBe,GADwB,GAChBf,CADgB,CACxBe,GADwB;;AAEhC,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI9B,QAAQ+B,MAA5B,EAAoCD,GAApC,EAAyC;AACrC,YAAI9B,QAAQ8B,CAAR,EAAW7B,IAAX,CAAgB+B,WAAhB,OAAkCH,GAAtC,EAA2C;AACvCjB,mBAAOC,IAAP,CAAYb,QAAQ8B,CAAR,EAAW5B,GAAvB;AACH;AACJ;AACJ,CAPD","file":"main.444d74c3.map","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable no-useless-escape */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-console */\r\n/* eslint-disable no-undef */\r\nconst $siteList = $('.siteList')\r\nconst $lastli = $siteList.find('li.last')\r\n    //localStorage.clear()\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x) //把字符串转换为对象\r\nconst hashMap = xObject || [\r\n    { logo: 'B', url: 'https://www.bilibili.com' },\r\n    { logo: 'N', url: 'https://www.nowcoder.com' }\r\n]\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove() //第一次运行的时候li标签还没有加载上\r\n    hashMap.forEach((node, index) => {\r\n        const $li = $(`<li>\r\n                    <div class=\"site\">\r\n                        <div class=\"logo\">\r\n                            ${node.logo}\r\n                        </div>\r\n                        <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                        <div class=\"close\">\r\n                            <svg class=\"icon\" aria-hidden=\"true\">\r\n                                <use xlink:href=\"#icon-close\"></use>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n        </li>`).insertBefore($lastli)\r\n        $li.on('click', () => {\r\n            window.open(node.url)\r\n        })\r\n        $li.on('click', '.close', (e) => {\r\n            console.log('close')\r\n            e.stopPropagation();\r\n            hashMap.splice(index, 1) //删除指定元素\r\n            render() //重新渲染浏览器\r\n        })\r\n    })\r\n}\r\n\r\nconst simplifyUrl = (url) => {\r\n    let b = url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '') // 删除 / 开头的内容\r\n    console.log(b)\r\n    return b\r\n}\r\nrender()\r\n$('.addButton')\r\n    .on('click', () => {\r\n        //prompt显示一个对话框，对话框中包含一条文字信息，提示用户输入文字\r\n        /*\r\n        result = window.prompt(text,value)\r\n        text:提示用户输入的提示信息\r\n        value:用户输入的信息\r\n        */\r\n        let url = window.prompt('请问你要添加的网址是什么？')\r\n\r\n        if (url.indexOf('http')) {\r\n            url = 'https://' + url;\r\n        }\r\n        hashMap.push({\r\n            logo: simplifyUrl(url)[0],\r\n            url: url\r\n        })\r\n        render()\r\n    })\r\n\r\nwindow.onbeforeunload = () => {\r\n    const string = JSON.stringify(hashMap) //将对象转换为字符串\r\n    localStorage.setItem('x', string) //将信息存储进localStorage\r\n}\r\n\r\n$(document).on(('keypress'), (e) => {\r\n    const { key } = e\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        if (hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})"]}